---
- name: Find and close records by tag
  hosts: localhost
  connection: local
  gather_facts: true
  vars:
    username: "{{ lookup('env', 'SN_USERNAME') }}"
    password: "{{ lookup('env', 'SN_PASSWORD') }}"
    instance: "{{ lookup('env', 'SN_HOST') }}"
    tag_name: instruqt
    mapping:
      incident:
        state:
          1: "new"
          2: "active"
          3: "awaiting_problem"
          4: "awaiting_user_infor"
          5: "awaiting_evidence"
          6: "resolved"
          7: "closed"
          8: "active"
      problem:
        state:
          1: "open"
          2: "known_error"
          3: "pending_change"
          4: "closed_resolved"
          5: "closed"
        problem_state:
          1: "open"
          2: "known_error"
          3: "pending_change"
          4: "closed_resolved"
          5: "closed"
  tasks:

    - name: Find tag ID by name
      servicenow.itsm.api_info:
        resource: label
        sysparm_query: name={{ tag_name }}
        columns:
          - name
          - sys_id
      register: tag_info

    - name: Set tag_id fact
      ansible.builtin.set_fact:
        tag_id: "{{ tag_info.record[0].sys_id }}"

    - name: Get tagged incidents
      servicenow.itsm.incident_info:
        incident_mapping: "{{ mapping.incident }}"
        sysparm_query:
          sys_tags.{{ tag_id }}={{ tag_id }}
          ^active=true
        sysparm_display_value: false
      register: incidents

    - name: Get tagged problems
      servicenow.itsm.problem_info:
        sysparm_query:
          sys_tags.{{ tag_id }}={{ tag_id }}
          ^active=true
          ^state!=closed
        sysparm_display_value: false
      register: problems

    - name: Get tagged changes
      servicenow.itsm.change_request_info:
        change_request_mapping: "{{ mapping.incident }}"
        sysparm_query:
          sys_tags.{{ tag_id }}={{ tag_id }}
          ^active=true
        sysparm_display_value: false
      register: changes

    - name: Get tagged config items
      servicenow.itsm.configuration_item_info:
        sysparm_query:
          sys_tags.{{ tag_id }}={{ tag_id }}
          ^active=true
        sysparm_display_value: false
      register: config_items

    - name: Create lists
      ansible.builtin.set_fact:
        incident_list: []
        problem_list: []
        change_list: []
        config_item_list: []

    - name: Query incident number and creation time
      ansible.builtin.set_fact:
        incident_list: '{{ incident_list + [{"number": item.number, "opened_at": item.opened_at}] }}'
      loop: "{{ incidents.records }}"
      when: incidents is defined

    - name: Query problem number and creation time
      ansible.builtin.set_fact:
        problem_list: '{{ problem_list + [{"number": item.number, "opened_at": item.opened_at}] }}'
      loop: "{{ problems.records }}"
      when: problems is defined

    - name: Query change number and creation time
      ansible.builtin.set_fact:
        change_list: '{{ change_list + [{"number": item.number, "opened_at": item.opened_at}] }}'
      loop: "{{ changes.records }}"
      when: changes is defined

    - name: Query config item sys_id and creation time
      ansible.builtin.set_fact:
        config_item_list: '{{ config_item_list + [{"sys_id": item.sys_id, "opened_at": item.sys_created_on}] }}'
      loop: "{{ config_items.records }}"
      when: config_items is defined

    - name: Clean up records
      ansible.builtin.include_tasks: close-records.yml
